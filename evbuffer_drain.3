.\" $OpenBSD$
.\" Copyright (c) 2023 Ted Bullock <tbullock@comlore.com>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate$
.Dt EVBUFFER_DRAIN 3
.Os
.Sh NAME
.Nm evbuffer_drain
.Nd clear bytes from the beginning of an evbuffer
.Sh SYNOPSIS
.In event.h
.Ft void
.Fn evbuffer_drain "struct evbuffer *buf" "size_t len"
.Fd #define EVBUFFER_LENGTH(x) 	(x)->off
.Fd #define EVBUFFER_DATA(x)  	(x)->buffer
.Sh DESCRIPTION
Although the
.Sy evbuffer
API automatically empties buffers throughout normal operation, programs may
manually drain data from the buffer using
.Fn evbuffer_drain .
This function adjusts the internal offsets used to keep track of the beginning
of stored data and does not provide access to data being drained.
Typically this function is called internally from other
.Sy evbuffer
API functions as part of bookkeeping.
.Pp
.Fn evbuffer_drain
empties the first
.Fa len
bytes of data from the
.Va evbuffer
structure
.Fa buf .
The function causes undefined behavior if
.Fa buf
is
.Dv NULL .
If
.Fa len
is less than the length of stored data, the function adjusts internal
misalignment offsets by
.Fa len
bytes.
This leaves the buffer effectively shorter, with the beginning of stored data
moved
.Fa len
bytes further into the buffer.
If
.Fa len
is greater than or equal to the length of stored data, the function resets
internal buffer offsets to zero leaving it effectively empty.
An optional callback function configured with
.Xr evbuffer_setcb 3
is invoked at the end of the function.
.Pp
Refer to
.Xr evbuffer_expand 3
for an explanation of misalignment in the
.Sy evbuffer
API.
.Pp
.Fn evbuffer_drain
does not explicitly clear memory.
It removes data from the front of the buffer by adjusting internal offset
values, but it does not modify or clear the memory used to store the removed
data.
.Pp
.Fn EVBUFFER_LENGTH x
evaluates to the variable representing the length of data stored in the
.Vt evbuffer
.Fa x
using internal structure fields.
This macro will cause a segmentation fault if
.Fa x
is
.Dv NULL
or not an
.Vt evbuffer .
Use of this macro is not advised.
.Pp
.Fn EVBUFFER_DATA x
evaluates to the pointer representing the dynamic data buffer of the
.Vt evbuffer
.Fa x
using internal structure fields.
This macro will cause a segmentation fault if
.Fa x
is
.Dv NULL
or not an
.Vt evbuffer .
Use of this macro is not advised.
.Sh SEE ALSO
.Xr evbuffer_expand 3 ,
.Xr evbuffer_new 3
.Sh HISTORY
These macros and function first appeared in libevent-0.8 and have been
available since
.Ox 3.6 .
.Sh AUTHORS
These macros and function were written by
.An -nosplit
.An Niels Provos .
.Pp
This manual page was written by
.An Ted Bullock Aq Mt tbullock@comlore.com .
