.\" $OpenBSD$
.\" Copyright (c) 2023 Ted Bullock <tbullock@comlore.com>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate$
.Dt EVENT_ACTIVE 3
.Os
.Sh NAME
.Nm event_active
.Nd manually trigger an event
.Sh SYNOPSIS
.In event.h
.Ft void
.Fn event_active "struct event *ev" "int res" "short ncalls"
.Fd #define EV_TIMEOUT	0x01
.Fd #define EV_READ	0x02
.Fd #define EV_WRITE	0x04
.Fd #define EV_SIGNAL	0x08
.Fd #define EV_PERSIST	0x10
.Sh DESCRIPTION
Programs may occasionally need to manually trigger events with user-defined
behavior.
This is accomplished with the
.Fn event_active
function, which signals an event loop to process the event and invoke the
event callback
.Fa ncalls
number of times in a row.
The arguments are as follows:
.Bl -tag -width "ncalls:"
.It Fa ev :
A pointer to the
.Vt event
to be triggered; if
.Fa ev
is
.Dv NULL
the behavior is undefined.
.It Fa res :
A bitmask specifying which event flags to activate.
.Dv EV_TIMEOUT ,
.Dv EV_READ ,
.Dv EV_WRITE ,
.Dv EV_SIGNAL ,
and
.Dv EV_PERSIST
are valid flags consistent with event library semantics.
Other flags may produce undefined behavior or be ignored by library functions.
Refer to
.Xr event_set 3
for a detailed explanation of event flags.
.It Fa ncalls :
The number of times the callback function should be executed.
The behavior is undefined if
.Fa ncalls
is negative or zero.
.El
.Pp
This function updates the event flags on activated events but otherwise makes
no other changes.
.Pp
.Fn event_active
causes a segmentation fault if executed without previously invoking at least
.Xr event_set 3 .
.Xr event_base_set 3
is
.Em also
required for programs initialized with
.Xr event_base_new 3 .
.Pp
The function preserves an events queue number configured with
.Xr event_priority_set 3 .
The event is processed consistent with the priority promise of that queue.
.Sh SEE ALSO
.Xr event_base_new 3 ,
.Xr event_base_loop 3 ,
.Xr event_priority_set 3 ,
.Xr event_set 3
.Sh HISTORY
.Fn event_active
first appeared in libevent-0.4 and has been available since
.Ox 3.2 .
.Sh AUTHORS
The event library and this function was written by
.An -nosplit
.An Niels Provos .
.Pp
This manual page was written by
.An Ted Bullock Aq Mt tbullock@comlore.com .
