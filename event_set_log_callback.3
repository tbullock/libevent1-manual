.\" $OpenBSD$
.\" Copyright (c) 2023 Ted Bullock <tbullock@comlore.com>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate$
.Dt EVENT_SET_LOG_CALLBACK 3
.Os
.Sh NAME
.Nm event_set_log_callback
.Nd set callback for diagnostics
.Sh SYNOPSIS
.In event.h
.Ft typedef void
.Fo (*event_log_cb)
.Fa "int sev"
.Fa "const char *msg"
.Fc
.Ft void
.Fo event_set_log_callback
.Fa "event_log_cb cb"
.Fc
.Sh DESCRIPTION
The event library uses a callback function that is configured using
.Fn event_set_log_callback
to report error and diagnostic messages.
By default the library does not report diagnostics.
In case of internal errors, the event library will call
.Xr exit 3 .
.Pp
.Fa sev ,
represents the severity of the message.
.Fa sev
may be one of:
.Bl -tag -width Ds
.It Dv _EVENT_LOG_DEBUG 0
Messages for debugging purposes.
.It Dv _EVENT_LOG_MSG 1
Messages providing information.
.It Dv _EVENT_LOG_WARN 2
Messages indicating non-fatal issues.
.It Dv _EVENT_LOG_ERR 3
Messages indicating fatal issues.
After sending the message to the log callback, the library will stop the
program by calling
.Xr exit 3 .
.El
.Pp
.Fa msg ,
is an ASCII string.
.Pp
Restore default behavior and prevent callbacks if
.Fa cb
is
.Dv NULL .
.Sh RETURN VALUES
The function has no return value and is always successful.
.Sh EXAMPLES
The following C program illustrates use of
.Fn event_set_log_callback .
The callback function
.Fn cb
includes logic to identify the severity levels of diagnostic messages.
.Bd -literal -offset indent
#include <event.h>
#include <stdio.h>

void
cb(int sev, const char *msg)
{
	switch (sev) {
	case _EVENT_LOG_DEBUG:
		printf("DEBUG: %s\en", sev, msg);
		break;
	case _EVENT_LOG_MSG:
		printf("INFO: %s\en", sev, msg);
		break;
	case _EVENT_LOG_WARN:
		printf("WARNING: %s\en", sev, msg);
		break;
	case _EVENT_LOG_ERR:
		printf("ERROR: %s\en", sev, msg);
	}
}

int
main(int argc, char *argv[])
{
	/* Redirect diagnostic messages to `cb` callback */
	event_set_log_callback(cb);
	/* Initialize library; failures won't return */
	event_init();

	/* Do something with the event library here */

	/* Deallocate memory */
	event_base_free(NULL);
	return 0;
}
.Ed
.Sh SEE ALSO
.Xr event_base_new 3 ,
.Xr exit 3
.Sh HISTORY
The
.Fn event_set_log_callback
function was first implemented in libevent-1.1 and added to
.Ox 3.8 .
.Sh AUTHORS
The event library
was written by
.An -nosplit
.An Niels Provos
and
.An Nick Mathewson .
.Pp
This manual page was written by
.An Ted Bullock Aq Mt tbullock@comlore.com .
